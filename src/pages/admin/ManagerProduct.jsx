import { useEffect, useState } from "react";
import API from "../../utils/api";
import PageWrapper from "../../components/PageWrapper";

export default function ManagerProduct() {
  const [products, setProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({
    name: "",
    price: "",
    image: "",
  });
  const [editingProduct, setEditingProduct] = useState(null); // Th√™m tr·∫°ng th√°i cho s·∫£n ph·∫©m ƒëang s·ª≠a

  useEffect(() => {
    fetchProducts();
  }, []);

  const fetchProducts = () => {
    API.get("/products")
      .then((res) => setProducts(res.data))
      .catch((err) => console.error(err));
  };

  const handleDelete = (id) => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën xo√° s·∫£n ph·∫©m n√†y?")) {
      API.delete(`/products/${id}`)
        .then(() => fetchProducts())
        .catch((err) => console.error(err));
    }
  };

  const handleAddProduct = () => {
    if (!newProduct.name || !newProduct.price || !newProduct.image) {
      alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }
    API.post("/products", newProduct)
      .then(() => {
        fetchProducts();
        setNewProduct({ name: "", price: "", image: "" }); // Clear form
      })
      .catch((err) => console.error(err));
  };

  const handleEditProduct = (product) => {
    setEditingProduct(product); // ƒê·∫∑t s·∫£n ph·∫©m ƒëang s·ª≠a v√†o tr·∫°ng th√°i
    setNewProduct({ ...product }); // ƒêi·ªÅn th√¥ng tin s·∫£n ph·∫©m v√†o form
  };

  const handleUpdateProduct = () => {
    if (!newProduct.name || !newProduct.price || !newProduct.image) {
      alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
      return;
    }
    API.put(`/products/${newProduct.id}`, newProduct)
      .then(() => {
        fetchProducts();
        setEditingProduct(null); // Reset tr·∫°ng th√°i sau khi s·ª≠a xong
        setNewProduct({ name: "", price: "", image: "" }); // Clear form
      })
      .catch((err) => console.error(err));
  };

  return (
    <PageWrapper>
      <div style={styles.container}>
        <h2 style={styles.title}>üì¶ Danh s√°ch s·∫£n ph·∫©m</h2>

        {/* Form Th√™m/S·ª≠a s·∫£n ph·∫©m */}
        <div style={styles.formContainer}>
          <h3>{editingProduct ? "S·ª≠a s·∫£n ph·∫©m" : "Th√™m s·∫£n ph·∫©m m·ªõi"}</h3>
          <input
            type="text"
            placeholder="T√™n s·∫£n ph·∫©m"
            value={newProduct.name}
            onChange={(e) =>
              setNewProduct({ ...newProduct, name: e.target.value })
            }
            style={styles.input}
          />
          <input
            type="number"
            placeholder="Gi√°"
            value={newProduct.price}
            onChange={(e) =>
              setNewProduct({ ...newProduct, price: e.target.value })
            }
            style={styles.input}
          />
          <input
            type="text"
            placeholder="Link ·∫£nh"
            value={newProduct.image}
            onChange={(e) =>
              setNewProduct({ ...newProduct, image: e.target.value })
            }
            style={styles.input}
          />
          <button
            onClick={editingProduct ? handleUpdateProduct : handleAddProduct}
            style={styles.addButton}
          >
            {editingProduct ? "C·∫≠p nh·∫≠t s·∫£n ph·∫©m" : "Th√™m s·∫£n ph·∫©m"}
          </button>
        </div>

        {/* B·∫£ng danh s√°ch s·∫£n ph·∫©m */}
        <table style={styles.table}>
          <thead>
            <tr>
              <th>#</th>
              <th>T√™n s·∫£n ph·∫©m</th>
              <th>Gi√°</th>
              <th>·∫¢nh</th>
              <th>H√†nh ƒë·ªông</th>
            </tr>
          </thead>
          <tbody>
            {products.map((p, index) => (
              <tr key={p.id}>
                <td>{index + 1}</td>
                <td>{p.name}</td>
                <td>{p.price.toLocaleString()}‚Ç´</td>
                <td>
                  <img src={p.image} alt={p.name} width="60" />
                </td>
                <td>
                  <button onClick={() => handleDelete(p.id)}>üóëÔ∏è Xo√°</button>
                  <button
                    style={{ marginLeft: 10 }}
                    onClick={() => handleEditProduct(p)} // S·ª≠a s·∫£n ph·∫©m
                  >
                    ‚úèÔ∏è S·ª≠a
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </PageWrapper>
  );
}

const styles = {
  container: {
    padding: "24px",
  },
  title: {
    fontSize: "24px",
    marginBottom: "16px",
  },
  table: {
    width: "100%",
    borderCollapse: "collapse",
    boxShadow: "0 0 10px rgba(0,0,0,0.1)",
  },
  formContainer: {
    marginBottom: "20px",
  },
  input: {
    display: "block",
    marginBottom: "10px",
    padding: "8px",
    width: "100%",
    borderRadius: "4px",
    border: "1px solid #ccc",
  },
  addButton: {
    padding: "10px 15px",
    backgroundColor: "#4CAF50",
    color: "white",
    border: "none",
    borderRadius: "4px",
    cursor: "pointer",
  },
};
